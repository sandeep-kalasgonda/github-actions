name: Node.js CI & Docker Deploy

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: [self-hosted, git-test]

    strategy:
      matrix:
        node-version: [18.x]

    env:
      IMAGE_NAME: my-node-app

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run build
      run: npm run build --if-present

    - name: Run tests
      run: npm test

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and tag Docker image
      run: |
        TAG=${GITHUB_REF##*/}
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:$TAG .
        docker tag ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:$TAG ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Push Docker image to Docker Hub
      run: |
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:$TAG
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest

    - name: Remove existing container (if running)
      run: |
        docker ps -q --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}" | xargs -r docker stop
        docker ps -aq --filter "ancestor=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}" | xargs -r docker rm

    - name: Run Docker container
      run: |
        docker run -d --name my-node-app -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
